@page "/OpenStream/{PFileName}"
@inject Microsoft.AspNetCore.Components.NavigationManager NavMan
@using Microsoft.AspNetCore.Http
@using System.IO;
@namespace FileManager.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{


    Response.Headers.Clear();
    // HttpContext.Response.Clear();
    string url;
    long time = 0;
    long Pos = -1;
    try
    {

        //Console.WriteLine($"Partial Request {Request.Headers["Range"]}");

        string q = HttpContext.Request.QueryString.Value.TrimStart('?');
        int splitAt = q.IndexOf(':');
        if (splitAt != -1)
        {
            if (long.TryParse(q.Substring(0, splitAt), out time))
            {
                url = Uri.UnescapeDataString(q.Substring(splitAt + 1)).Trim('"');
            }
            else
            {
                time = 0;
                url = Uri.UnescapeDataString(q.TrimStart('?')).Trim('"');
            }
        }
        else
        {
            time = 0;
            url = Uri.UnescapeDataString(q.TrimStart('?')).Trim('"');
        }



    }
    catch (Exception ex)
    {
        //TODO: Use more understandable err msgs
        Console.WriteLine("Path error " + ex.Message);
        await Response.WriteAsync("Path error " + ex.Message);
        return;
    }


    if (Request.Headers.TryGetValue("Range", out Microsoft.Extensions.Primitives.StringValues sval))
    {
        string rs = sval.ToString();
        if (rs.Length > 0)
        {
            string[] parts = rs.Split('=', '-');
            if (parts.Length > 2)
            {
                if (long.TryParse(parts[1], out long newPos))
                {
                    Pos = newPos;
                }
            }
        }
    }




    FileStream FS;
    try
    {
        FS = System.IO.File.Open(url, FileMode.Open, FileAccess.Read, FileShare.Read);
    }
    catch (Exception ex)
    {
        //TODO: Use more understandable err msgs
        Console.WriteLine("Opening error " + url + " >> " + ex.Message);
        await Response.WriteAsync("Opening error " + url + " >> " + ex.Message);
        return;
    }
    long L = FS.Length;

    if (Pos > 0 && FS.CanSeek)
    {
        FS.Seek(Pos, SeekOrigin.Begin);
        Response.StatusCode = 206;
        Response.Headers.Add("Content-Range", $" bytes {Pos}-{L - 1}/{L}");
        time = Pos * 100L / L;
    }
    else if (time > 0 && FS.CanSeek)
    {
        Pos = (long)(L * (time / 100f));
        FS.Seek(Pos, SeekOrigin.Begin);
        Response.StatusCode = 206;
    }
    else
    {
        Pos = 0;
    }

    Console.WriteLine($"Streaming {url} \t at {time}% \t ({Pos} of {L})");

    Response.Headers.Add("Content-Length", (L - Pos + 4).ToString());

    // HttpContext.Response.Headers.Clear();
    await FS.CopyToAsync(HttpContext.Response.BodyWriter.AsStream(true));
    Console.WriteLine($"Done Streaming {url} \t at {time}% \t ({Pos} of {L})");
    FS.Dispose();
}
